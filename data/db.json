{
  "products": [
    {
      "id": 1,
      "title": "Basic to Advanced JavaScript",
      "overview": "This comprehensive course takes you on a journey from JavaScript novice to confident developer, equipping you with the knowledge and skills to build dynamic web applications.\n\n**Part 1: The Fundamentals**\n\n* **Introduction to JavaScript:** Dive into the world of JavaScript, understanding its purpose, syntax, and fundamental concepts.\n* **Variables, Data Types, and Operators:** Learn how to store and manipulate data using variables, understand different data types, and use operators to perform calculations.\n* **Control Flow:** Master conditional statements and loops to create dynamic and interactive programs.\n* **Functions:** Understand function declarations, arguments, and return values to write reusable code blocks.\n* **Arrays and Objects:** Explore arrays for storing collections of data and objects for representing complex data structures.\n\n**Part 2: DOM Manipulation and Web Interactivity**\n\n* **Document Object Model (DOM):** Learn how to interact with HTML elements, dynamically change their content and styles, and create user interfaces.\n* **Events and Event Handling:** Discover how to respond to user interactions, including clicks, mouseovers, and keyboard events.\n* **Forms and Input Validation:** Build forms, handle user input, and validate data to create robust web applications.\n* **AJAX and Asynchronous Programming:** Explore asynchronous programming techniques and make your web applications more responsive with AJAX.\n\n**Part 3: Advanced JavaScript Concepts**\n\n* **Object-Oriented Programming (OOP):** Understand the principles of OOP, including classes, inheritance, and encapsulation, to create well-structured and maintainable code.\n* **Closures and Scope:** Explore the concept of closures and how they affect variable scope in JavaScript.\n* **Promises and Async/Await:** Learn about asynchronous programming with promises and explore the benefits of using async/await.\n* **Modules and Libraries:** Discover how to create and use modules to organize your code and leverage popular JavaScript libraries like React, Angular, or Vue.js.\n* **Debugging and Testing:** Develop debugging techniques and learn how to write unit tests to ensure code quality.\n\n**This course is designed for:**\n\n* **Beginners:** Individuals with no prior JavaScript experience.\n* **Intermediate Developers:** Those who want to strengthen their JavaScript foundation and explore advanced concepts.\n* **Aspiring Web Developers:** Anyone looking to build a career in web development.\n\n**By the end of this course, you will be able to:**\n\n* **Write clean and efficient JavaScript code.**\n* **Build interactive web applications with dynamic user interfaces.**\n* **Use popular JavaScript libraries and frameworks.**\n* **Debug and test your code effectively.**\n* **Contribute to real-world web development projects.**\n\n**Get ready to unlock the power of JavaScript and build amazing web applications!**",
      "image": "https://www.infoworld.com/wp-content/uploads/2024/06/shutterstock_1361674454-100939444-orig.jpg?resize=1024%2C684&quality=50&strip=all",
      "rating": 4.5,
      "available": true,
      "bestseller": false,
      "price": 200
    },
    {
      "id": 2,
      "title": "All You Need To Know About CSS",
      "overview": "This comprehensive guide will equip you with a solid understanding of Cascading Style Sheets (CSS), empowering you to create visually stu\n\ning and responsive websites.\n\n**Part 1: CSS Fundamentals**\n\n* **Introduction to CSS:** Explore the basics of CSS, its purpose, and how it works in conjunction with HTML.\n* **Selectors and Properties:** Learn how to target specific HTML elements and apply styles using selectors and properties.\n* **Basic Styling:** Master fundamental CSS properties like color, font, size, spacing, and positioning.\n* **Layout and Positioning:** Discover different techniques for arranging elements on the page using flexbox, grid, and traditional positioning methods.\n* **Typography:** Enhance the readability and visual appeal of your website with advanced typography techniques.\n\n**Part 2: Advanced CSS Techniques**\n\n* **Responsive Web Design:** Learn to create websites that adapt seamlessly to different screen sizes and devices.\n* **Animations and Transitions:** Add dynamic effects and user interactions to your websites using CSS animations and transitions.\n* **Preprocessors:** Explore popular CSS preprocessors like Sass and Less to streamline your workflow and enhance your CSS code.\n* **CSS Frameworks:** Understand the benefits of using CSS frameworks like Bootstrap and Tailwind CSS for rapid web development.\n* **Modern CSS Features:** Dive into new and exciting CSS features like CSS Grid, Flexbox, and CSS Variables to create innovative designs.\n\n**This guide is designed for:**\n\n* **Beginners:** Individuals new to web development and CSS.\n* **Front-End Developers:** Those who want to expand their CSS knowledge and master advanced techniques.\n* **Anyone interested in creating visually appealing websites:** From designers to hobbyists, this guide provides the essential CSS foundation.\n\n**By the end of this guide, you will be able to:**\n\n* **Create visually appealing and responsive websites.**\n* **Understand and apply advanced CSS techniques.**\n* **Optimize your CSS code for efficiency and maintainability.**\n* **Leverage popular CSS frameworks and preprocessors.**\n* **Stay up-to-date with the latest CSS trends and best practices.**\n\n**Get ready to unleash the power of CSS and bring your web design visions to life!**",
      "image": "https://x-team.com/hs-fs/hubfs/Imported_Blog_Media/CSS-Code-2.jpg?width=2180&height=980&name=CSS-Code-2.jpg",
      "rating": 4,
      "available": true,
      "bestseller": false,
      "price": 345
    },
    {
      "id": 3,
      "title": "HTML For Beginners",
      "overview": "Welcome to the world of web development! This beginner-friendly guide will introduce you to the fundamental language of the web: HTML.\n\n**Part 1: HTML Basics**\n\n* **Introduction to HTML:** Discover what HTML is, its purpose, and how it interacts with other web technologies.\n* **HTML Structure:** Learn about the basic structure of an HTML document, including tags, elements, and attributes.\n* **Text Formatting:** Master the art of formatting text using headings, paragraphs, lists, and other essential elements.\n* **Images and Links:** Integrate images into your webpage and create clickable links to other resources.\n* **Tables and Forms:** Build tables to organize data and forms to gather user input.\n\n**Part 2: Building Web Pages**\n\n* **Semantic HTML:** Understand the importance of using semantic HTML elements for better accessibility and search engine optimization (SEO).\n* **Headings and Structure:** Create clear and organized content with proper heading structures.\n* **Styling with CSS:** Learn how to link CSS files to your HTML documents to style your website's appearance.\n* **Basic JavaScript:** Explore the basics of JavaScript and how it can enhance the interactivity of your web pages.\n* **Website Organization:** Discover techniques for organizing your HTML files and creating well-structured websites.\n\n**This guide is designed for:**\n\n* **Absolute Beginners:** Individuals with no prior knowledge of web development.\n* **Anyone interested in learning how websites are built:** From hobbyists to aspiring web developers, this guide provides a solid foundation.\n\n**By the end of this guide, you will be able to:**\n\n* **Create simple and functional web pages.**\n* **Understand the basic structure and syntax of HTML.**\n* **Format text, insert images, and create links.**\n* **Apply basic CSS styling to your web pages.**\n* **Lay the foundation for further web development learning.**\n\n**Get ready to embark on your web development journey with HTML!**",
      "image": "https://cdn.educba.com/academy/wp-content/uploads/2018/09/Top-Uses-Of-HTML.jpg",
      "rating": 4.5,
      "available": true,
      "bestseller": true,
      "price": 233
    },
    {
      "id": 4,
      "title": "React.js: Beginners To Advanced",
      "overview": "Embark on a comprehensive journey through the world of React, a powerful JavaScript library for building dynamic user interfaces. This course will guide you from novice to expert, equipping you with the skills to create robust and interactive web applications.\n\n**Part 1: React Fundamentals**\n\n* **Introduction to React:** Explore the core concepts of React, its advantages, and how it differs from traditional JavaScript development.\n* **JSX and Components:** Learn how to use JSX to write React components and build reusable UI elements.\n* **State and Props:** Understand the concepts of state and props to manage data within components and pass information between them.\n* **Lifecycle Methods:** Explore lifecycle methods to control the behavior of components throughout their lifecycle.\n* **Building Basic Applications:** Create simple React applications using the knowledge gained from the fundamentals.\n\n**Part 2: Advanced React Concepts**\n\n* **Hooks:** Master the power of hooks to manage state, side effects, and more without class components.\n* **Context API:** Learn how to share data across your application using the Context API for efficient data management.\n* **React Router:** Navigate between different pages and views within your React application using the React Router library.\n* **Form Handling:** Explore techniques for handling user input in forms using React's built-in form handling mechanisms.\n* **Performance Optimization:** Improve the performance of your React applications by implementing strategies for efficient rendering and data fetching.\n\n**Part 3: React Ecosystem and Best Practices**\n\n* **React Developer Tools:** Utilize Chrome Developer Tools and other debugging tools to inspect and analyze your React applications.\n* **Testing with Jest:** Learn how to write unit tests for your React components using the popular Jest testing library.\n* **React Libraries and Frameworks:** Explore popular React libraries and frameworks like Redux, MobX, and Next.js to enhance your React development workflow.\n* **Deployment:** Understand the process of deploying your React applications to different environments.\n* **Best Practices and Patterns:** Discover best practices for writing clean, scalable, and maintainable React code.\n\n**This course is designed for:**\n\n* **Beginners:** Individuals with a basic understanding of HTML, CSS, and JavaScript.\n* **Front-End Developers:** Those who want to learn a modern and efficient way to build web applications.\n* **Anyone interested in creating dynamic and interactive user interfaces.**\n\n**By the end of this course, you will be able to:**\n\n* **Build complex and interactive React applications.**\n* **Master core React concepts and advanced techniques.**\n* **Write clean and efficient React code.**\n* **Utilize popular React libraries and frameworks.**\n* **Deploy your React applications to production environments.**\n\n**Get ready to unlock the full potential of React and build amazing web applications!**",
      "image": "https://onextrapixel.com/wp-content/uploads/2016/04/reactjs-thumb.jpg",
      "rating": 5,
      "available": false,
      "bestseller": false,
      "price": 192
    },
    {
      "id": 5,
      "title": "Learn All About Node.js",
      "overview": "Dive into the world of Node.js, a powerful and versatile JavaScript runtime environment that empowers you to build scalable and high-performance applications. This comprehensive guide will take you from beginner to proficient, enabling you to harness the full potential of Node.js.\n\n**Part 1: Node.js Fundamentals**\n\n* **Introduction to Node.js:** Discover what Node.js is, its key features, and its role in the JavaScript ecosystem.\n* **Setting up Node.js:** Learn how to install Node.js on your system and explore the essential tools and packages.\n* **JavaScript on the Server:** Understand how Node.js allows you to use JavaScript for server-side programming, enabling dynamic web applications.\n* **Modules and Packages:** Explore the concept of modules and packages, and learn how to utilize the vast npm ecosystem for reusable code.\n* **Basic Node.js Applications:** Create simple Node.js applications to solidify your understanding of the fundamentals.\n\n**Part 2: Core Node.js Concepts**\n\n* **Events and Callbacks:** Grasp the asynchronous nature of Node.js and learn how to handle events and callbacks effectively.\n* **Streams:** Understand how Node.js streams work and how they enable efficient data handling for large files and network operations.\n* **HTTP Server and Client:** Build your own HTTP servers and clients using Node.js to create custom web applications.\n* **File System and Network Operations:** Learn how to interact with the file system and perform network operations using Node.js built-in modules.\n* **Error Handling:** Master best practices for handling errors gracefully in your Node.js applications.\n\n**Part 3: Advanced Node.js Concepts**\n\n* **Express.js Framework:** Explore Express.js, a popular framework that simplifies the development of web applications with Node.js.\n* **Database Integration:** Learn how to connect your Node.js applications to popular databases like MongoDB, PostgreSQL, and MySQL.\n* **Middleware and Routing:** Understand how middleware functions enhance your Express.js applications and how to create efficient routing mechanisms.\n* **Asynchronous Programming Patterns:** Explore advanced asynchronous programming patterns like Promises and async/await for efficient and readable code.\n* **Testing and Debugging:** Discover techniques for testing your Node.js applications using tools like Mocha and Chai, and learn how to effectively debug Node.js applications.\n\n**This guide is designed for:**\n\n* **Beginners:** Individuals with basic knowledge of JavaScript and an interest in server-side development.\n* **Backend Developers:** Those who want to expand their skills and learn how to build scalable and efficient applications using Node.js.\n* **Anyone interested in building high-performance web applications:** From hobbyists to professionals, this guide provides a comprehensive understanding of Node.js.\n\n**By the end of this guide, you will be able to:**\n\n* **Develop full-stack web applications using Node.js.**\n* **Create efficient and scalable Node.js applications.**\n* **Utilize popular Node.js frameworks and libraries.**\n* **Master asynchronous programming techniques in Node.js.**\n* **Debug and test your Node.js applications effectively.**\n\n**Get ready to unlock the power of Node.js and build innovative web applications!**",
      "image": "https://encore.dev/assets/resources/nodejs_frameworks_cover.png",
      "rating": 3.5,
      "available": true,
      "bestseller": false,
      "price": 317
    },
    {
      "id": 6,
      "title": "Vue.js Full Course",
      "overview": "Dive deep into the world of Vue.js, a progressive JavaScript framework that empowers you to build user interfaces with ease and efficiency. This comprehensive course will guide you from beginner to expert, equipping you with the knowledge and skills to create modern and interactive web applications.\n\n**Part 1: Vue.js Fundamentals**\n\n* **Introduction to Vue.js:** Explore the core concepts of Vue.js, its strengths, and how it compares to other frameworks.\n* **Setting up Vue.js:** Learn how to install Vue.js and create your first Vue application using the Vue CLI.\n* **Components and Templates:** Master the creation of reusable Vue components and learn how to write dynamic templates using the template syntax.\n* **Data Binding and Reactivity:** Discover the magic of data binding and reactivity in Vue.js, allowing you to seamlessly update UI elements based on data changes.\n* **Directives and Event Handling:** Explore Vue.js directives to control the behavior of elements and learn how to handle user events within your components.\n\n**Part 2: Advanced Vue.js Concepts**\n\n* **Computed Properties and Watchers:** Learn how to leverage computed properties to efficiently derive data from other properties and utilize watchers to respond to specific data changes.\n* **Vuex State Management:** Explore Vuex, the official state management library for Vue.js, to manage complex data flows and maintain a centralized state for your application.\n* **Vue Router:** Discover Vue Router, the official routing library for Vue.js, enabling seamless navigation between different views and components in your application.\n* **Server-Side Rendering (SSR):** Understand the benefits of SSR and how to implement it in your Vue.js applications using techniques like Nuxt.js.\n* **Vue.js Transitions and Animations:** Enhance the user experience with smooth transitions and engaging animations using Vue.js' built-in transition and animation features.\n\n**Part 3: Building Real-World Applications**\n\n* **Building a Complete Vue.js Application:**  Practice your skills by building a real-world Vue.js application, integrating features like API calls, user authentication, and data visualization.\n* **Vue.js Best Practices:** Discover best practices for writing clean, maintainable, and scalable Vue.js code, including component organization, modularity, and coding conventions.\n* **Testing Your Vue.js Applications:** Learn how to write unit and end-to-end tests for your Vue.js applications using testing tools like Jest and Cypress.\n* **Deploying Vue.js Applications:** Understand the deployment process for your Vue.js applications, exploring different deployment options and platforms.\n* **Staying Up-to-Date with Vue.js:** Explore resources and strategies for staying informed about the latest updates and features in the Vue.js ecosystem.\n\n**This course is designed for:**\n\n* **Beginners:** Individuals with a basic understanding of HTML, CSS, and JavaScript.\n* **Front-End Developers:** Those who want to learn a modern and progressive framework for building interactive web applications.\n* **Anyone interested in creating dynamic and user-friendly web experiences.**\n\n**By the end of this course, you will be able to:**\n\n* **Build complex and fully functional Vue.js applications.**\n* **Master core Vue.js concepts and advanced features.**\n* **Write clean, maintainable, and efficient Vue.js code.**\n* **Utilize popular Vue.js libraries and tools.**\n* **Deploy your Vue.js applications to production environments.**\n\n**Get ready to unlock the power of Vue.js and create exceptional web applications!**",
      "image": "https://www.angleritech.com/wp-content/uploads/2021/06/vuejs-development-services-company-in-india.png",
      "rating": 3,
      "available": false,
      "bestseller": false,
      "price": 144
    },
    {
      "id": 7,
      "title": "Learn All About Next.js",
      "overview": "Dive into the world of Next.js, a powerful React framework that combines the best of server-side rendering, static site generation, and automatic optimization to create lightning-fast and SEO-friendly web applications. This comprehensive guide will take you from beginner to expert, equipping you with the skills to build performant and scalable websites and applications.\n\n**Part 1: Next.js Fundamentals**\n\n* **Introduction to Next.js:** Discover what Next.js is, its core concepts, and how it leverages the power of React for building web applications.\n* **Setting Up Next.js:** Learn how to install Next.js, create your first Next.js project, and understand the basic project structure.\n* **Pages and Routing:** Explore how Next.js handles routing and file-based routing conventions, creating dynamic pages and navigation.\n* **Static Site Generation (SSG):** Understand the benefits of SSG and how to create static websites that are fast and SEO-friendly using Next.js.\n* **Server-Side Rendering (SSR):**  Learn how SSR enhances user experience by pre-rendering pages on the server and delivering fully rendered HTML to the browser.\n\n**Part 2: Advanced Next.js Concepts**\n\n* **Data Fetching:** Master various techniques for fetching data in Next.js, including getStaticProps, getServerSideProps, and API routes.\n* **Dynamic Routing:** Explore how to create dynamic routes to handle dynamic content and user-specific pages.\n* **Layout Components:** Learn how to use layout components to create consistent page structures and shared elements across your application.\n* **Styling with CSS Modules and CSS-in-JS:** Explore options for styling your Next.js application, including CSS Modules, styled-components, and other CSS-in-JS solutions.\n* **next.js API Routes:** Understand how to create API endpoints within your Next.js application to handle server-side logic and data requests.\n\n**Part 3: Building Real-World Applications**\n\n* **Building a Complete Next.js Application:** Practice your skills by building a real-world Next.js application, integrating features like authentication, user management, and dynamic content.\n* **next.js Best Practices:** Discover best practices for writing efficient, maintainable, and scalable Next.js applications, focusing on code organization, optimization, and testing.\n* **Deploying Next.js Applications:** Learn how to deploy your Next.js applications to various hosting platforms, including Vercel, Netlify, and AWS.\n* **Integrating with External Services:** Explore how to connect your Next.js applications with external APIs, databases, and other services for richer functionality.\n* **Advanced Features and Optimization:** Dive into advanced Next.js features like Image Optimization, Incremental Static Regeneration (ISR), and advanced API routes to build even more sophisticated applications.\n\n**This course is designed for:**\n\n* **React Developers:** Individuals familiar with React who want to enhance their skills and build performant websites with Next.js.\n* **Front-End Developers:** Those seeking to learn a powerful framework for creating both static and dynamic web applications.\n* **Anyone interested in building SEO-friendly and high-performance websites:**  From aspiring developers to experienced web professionals, this guide provides a complete overview of Next.js.\n\n**By the end of this course, you will be able to:**\n\n* **Build full-featured websites and applications using Next.js.**\n* **Master core Next.js concepts and advanced features.**\n* **Develop SEO-friendly and highly performant web experiences.**\n* **Deploy your Next.js applications to production environments.**\n* **Integrate Next.js with external services and APIs.**\n\n**Get ready to unleash the power of Next.js and build incredible web applications that are both fast and engaging!**",
      "image": "https://img-c.udemycdn.com/course/750x422/2000856_bce7_5.jpg",
      "rating": 4,
      "available": true,
      "bestseller": false,
      "price": 238
    },
    {
      "id": 8,
      "title": "Full Course Of Tailwind",
      "overview": "Embrace the power of Tailwind CSS, a utility-first CSS framework that empowers you to design beautiful and responsive websites with unparalleled speed and flexibility. This comprehensive guide will take you from novice to expert, unlocking the full potential of Tailwind CSS.\n\n**Part 1: Tailwind Fundamentals**\n\n* **Introduction to Tailwind CSS:** Discover the core principles of Tailwind CSS, its utility-first approach, and its advantages over traditional CSS frameworks.\n* **Setting up Tailwind CSS:** Learn how to install Tailwind CSS, configure it with your project, and begin creating styles using its utility classes.\n* **Understanding Tailwind Utilities:** Explore the vast library of Tailwind utility classes, covering everything from typography and spacing to colors, backgrounds, and interactive elements.\n* **Building Responsive Designs:** Master the art of creating responsive designs using Tailwind's responsive modifiers and breakpoints to ensure your websites adapt beautifully to different screen sizes.\n* **Tailwind Configuration and Customization:** Learn how to customize Tailwind CSS to align with your design preferences and branding, including adding custom colors, fonts, and utilities.\n\n**Part 2: Advanced Tailwind Techniques**\n\n* **Tailwind Components:** Explore Tailwind's pre-built components, such as buttons, cards, and navigation menus, to streamline development and create consistent UI elements.\n* **Tailwind Variants:** Discover the power of Tailwind variants to apply styles based on states, hover effects, focus states, and other conditions for dynamic and interactive designs.\n* **Tailwind Plugins:** Learn how to extend Tailwind's functionality with plugins, adding custom utilities and features for specific design requirements.\n* **Tailwind and JavaScript:** Integrate Tailwind CSS with JavaScript libraries and frameworks like React, Vue.js, and Angular for dynamic styling and user interactions.\n* **Tailwind and Design Systems:** Understand how to use Tailwind CSS to build robust and scalable design systems, ensuring consistent branding and visual styles across your projects.\n\n**Part 3: Tailwind Best Practices and Optimization**\n\n* **Tailwind Code Organization:** Explore strategies for organizing your Tailwind CSS classes and files to maintain a clean and efficient codebase.\n* **Tailwind Performance Optimization:** Learn techniques to optimize your Tailwind CSS for faster loading times and improved user experience, including minimizing CSS bundle sizes and prioritizing key styles.\n* **Tailwind and Accessibility:**  Understand how to apply Tailwind CSS in a way that ensures accessibility for all users, focusing on contrast ratios, keyboard navigation, and other accessibility best practices.\n* **Tailwind for Design Systems:**  Explore how Tailwind CSS can be used to create robust and scalable design systems, ensuring consistent branding and visual styles across your projects.\n* **Staying Up-to-Date with Tailwind:**  Discover resources and strategies for staying informed about the latest updates, features, and best practices in the Tailwind CSS ecosystem.\n\n**This guide is designed for:**\n\n* **Front-End Developers:**  Anyone who wants to learn a powerful and efficient way to create beautiful and responsive websites.\n* **Designers:**  Individuals who want to translate their design ideas into production-ready code with ease and speed.\n* **Anyone interested in building visually appealing and user-friendly websites:** From aspiring developers to experienced web professionals, this guide provides a comprehensive understanding of Tailwind CSS.",
      "image": "https://images.viblo.asia/1e584999-0b5a-4189-9081-b9a41212265d.jpg",
      "rating": 4.5,
      "available": true,
      "bestseller": false,
      "price": 355
    },
    {
      "id": 9,
      "title": "Advanced Course Of JavaScript",
      "overview": "Elevate your JavaScript skills to the next level and unlock the full potential of this powerful language. This comprehensive course dives deep into advanced concepts, design patterns, and best practices, empowering you to build robust, scalable, and maintainable applications.\n\n**Part 1: Mastering JavaScript Fundamentals**\n\n* **Deep Dive into Prototypes and Inheritance:** Explore the intricacies of JavaScript's prototype-based inheritance system and master techniques for creating reusable and extensible objects.\n* **Closures and Scope:** Understand the concept of closures and how they affect variable scope in JavaScript, enabling you to write more robust and efficient code.\n* **Advanced Array Methods:** Go beyond basic array manipulation and leverage powerful methods like map, filter, reduce, and more to streamline your code and enhance performance.\n* **Functional Programming Concepts:** Explore the principles of functional programming and how they can be applied to JavaScript for cleaner, more readable, and reusable code.\n* **Modern JavaScript Features:** Master new language features like destructuring, spread syntax, arrow functions, and more to write concise and expressive JavaScript.\n\n**Part 2: Building Complex Applications**\n\n* **Object-Oriented Programming (OOP) in JavaScript:** Apply OOP principles to JavaScript, leveraging classes, inheritance, and encapsulation to design modular and well-structured code.\n* **Design Patterns in JavaScript:** Learn about common design patterns like Singleton, Factory, and Observer to solve recurring problems and create maintainable solutions.\n* **Asynchronous Programming with Promises and Async/Await:**  Explore the power of promises and async/await for handling asynchronous operations in a clean and readable manner.\n* **Working with DOM and Event Handling:**  Master techniques for efficiently manipulating the DOM and creating dynamic user interfaces with JavaScript, including advanced event handling strategies.\n* **Testing and Debugging JavaScript Code:**  Learn effective testing techniques using tools like Jest and Mocha, and develop debugging strategies to identify and resolve issues in your JavaScript code.\n\n**Part 3: Advanced JavaScript Techniques**\n\n* **Modules and Package Management:** Understand how to create and manage JavaScript modules using tools like npm and Webpack, enabling you to build modular and reusable code.\n* **Advanced Web APIs:** Explore advanced browser APIs, such as WebSockets, IndexedDB, and Web Workers, to create more powerful and interactive web applications.\n* **Performance Optimization:**  Learn how to analyze and optimize your JavaScript code for better performance, reducing load times and improving user experience.\n* **Security Best Practices:**  Understand common security vulnerabilities in JavaScript applications and implement best practices to protect your applications from attacks.\n* **Modern JavaScript Libraries and Frameworks:**  Explore popular JavaScript libraries like React, Vue.js, and Angular to gain expertise in building complex user interfaces and web applications.\n\n**This course is designed for:**\n\n* **Intermediate to Advanced JavaScript Developers:** Individuals who have a solid foundation in JavaScript and are seeking to deepen their understanding of advanced concepts and best practices.\n* **Front-End Developers:**  Those who want to master JavaScript to build robust, scalable, and maintainable web applications.\n* **Anyone who wants to take their JavaScript skills to the next level:** From aspiring developers to experienced professionals, this course will equip you with the knowledge and techniques to become a JavaScript expert.",
      "image": "https://www.eldemy.com/assets/images/media/pictures/courses/advanced_javaScript_programming.jpg",
      "rating": 4.5,
      "available": false,
      "bestseller": false,
      "price": 209
    },
    {
      "id": 10,
      "title": "Full Course Of HTML And CSS",
      "overview": "Unlock the power of HTML and CSS, the fundamental building blocks of the web. This comprehensive course will guide you from beginner to expert, equipping you with the skills to create beautiful, responsive, and functional websites.\n\n**Part 1: HTML Fundamentals**\n\n* **Introduction to HTML:** Discover the purpose and structure of HTML, its role in web development, and how it interacts with other web technologies.\n* **Basic HTML Structure:** Learn the fundamental tags, elements, and attributes that form the foundation of an HTML document, including the head, body, and various content elements.\n* **Text Formatting:** Master the art of formatting text using headings, paragraphs, lists, and other essential elements to create clear and readable content.\n* **Images and Links:**  Integrate images into your web pages and create clickable links to connect to other resources, enhancing user experience and navigation.\n* **Tables and Forms:**  Build tables to organize data effectively and create forms to gather user input, enabling interactive features on your websites.\n\n**Part 2: CSS Fundamentals**\n\n* **Introduction to CSS:**  Explore the purpose of CSS, its relationship with HTML, and how it allows you to style the appearance of web pages.\n* **Selectors and Properties:** Learn how to target specific HTML elements and apply styles using selectors and CSS properties.\n* **Basic Styling:** Master fundamental CSS properties like color, font, size, spacing, and positioning to enhance the visual appeal of your website.\n* **Layout and Positioning:** Discover different techniques for arranging elements on the page using flexbox, grid, and traditional positioning methods to create visually appealing layouts.\n* **Typography:**  Enhance the readability and visual appeal of your website with advanced typography techniques, including font choices, sizing, and spacing.\n\n**Part 3: Building Modern and Responsive Websites**\n\n* **Responsive Web Design:**  Master the principles of responsive web design and utilize techniques like media queries to create websites that adapt seamlessly to different screen sizes and devices.\n* **CSS Frameworks:**  Explore popular CSS frameworks like Bootstrap and Tailwind CSS to streamline development and create visually appealing websites with pre-built components and utility classes.\n* **Advanced CSS Techniques:**  Dive into more advanced CSS concepts, such as animations, transitions, and transformations, to add dynamic effects and interactivity to your websites.\n* **CSS Preprocessors:**  Learn how to use CSS preprocessors like Sass and Less to enhance your CSS workflow, streamline code, and improve organization.\n* **HTML5 and CSS3:**  Discover the latest HTML5 and CSS3 features, including new semantic elements, advanced styling capabilities, and improved accessibility features.\n\n**Part 4: HTML and CSS Best Practices**\n\n* **HTML Best Practices:**  Understand the principles of semantic HTML, accessibility, and search engine optimization (SEO) to ensure your websites are well-structured, user-friendly, and discoverable.\n* **CSS Best Practices:**  Learn techniques for writing clean, maintainable, and efficient CSS code, including organizing styles, using a consistent naming convention, and minimizing code bloat.\n* **Debugging HTML and CSS:**  Develop effective debugging techniques to identify and resolve errors in your HTML and CSS code, ensuring your websites render correctly and meet your expectations.\n* **Code Optimization and Performance:**  Explore strategies for optimizing your HTML and CSS code for faster load times and improved user experience, including minifying code and reducing image sizes.",
      "image": "https://www.lambdatest.com/blog/wp-content/uploads/2018/11/JPG-2.jpg",
      "rating": 4,
      "available": true,
      "bestseller": true,
      "price": 360
    },
    {
      "id": 11,
      "title": "HTML/CSS/JavaScript Projects",
      "overview": "Put your web development skills to the test and build real-world projects with HTML, CSS, and JavaScript! This practical course will guide you through a series of exciting projects, helping you solidify your understanding of these fundamental technologies and gain valuable hands-on experience.\n\n**Part 1: Foundational Projects**\n\n* **Basic Website:**  Create a simple website showcasing your skills, including a homepage, about page, and contact page. This project reinforces basic HTML structure, styling with CSS, and adding interactive elements with JavaScript.\n* **Interactive To-Do List:** Build a to-do list application that allows users to add, edit, and delete tasks. This project focuses on DOM manipulation, event handling, and managing data with JavaScript.\n* **Simple Calculator:**  Develop a calculator that allows users to perform basic arithmetic operations. This project involves handling user input, performing calculations, and displaying results using JavaScript.\n\n**Part 2: Intermediate Projects**\n\n* **Responsive Portfolio Website:** Design a visually appealing and responsive portfolio website to showcase your work and skills. This project involves incorporating CSS frameworks like Bootstrap or Tailwind CSS, utilizing responsive techniques, and incorporating smooth transitions and animations.\n* **Interactive Quiz App:** Build a fun and engaging quiz application that challenges users with multiple-choice questions. This project focuses on data structures, event handling, displaying results, and potentially incorporating a timer or score tracking system.\n* **Simple Game:** Create a basic browser game, such as a memory game or a simple arcade-style game. This project involves applying game logic, utilizing DOM manipulation for game elements, and implementing interactive features using JavaScript.\n\n**Part 3: Advanced Projects**\n\n* **E-commerce Website:**  Develop a basic e-commerce website with product listings, a shopping cart, and a checkout process. This project involves handling user interactions, making API calls for product data, and integrating with payment gateways.\n* **Single-Page Application (SPA):**  Create a more complex website that functions as a single-page application, using JavaScript to dynamically load content and maintain state without refreshing the page. This project introduces concepts like routing and client-side rendering.\n* **Real-Time Chat Application:**  Build a basic real-time chat application using WebSockets to enable communication between users in real-time. This project involves managing user connections, handling message exchanges, and potentially integrating with a backend server.\n\n**This course is designed for:**\n\n* **Individuals who want to apply their HTML, CSS, and JavaScript knowledge to real-world projects.**\n* **Aspiring web developers seeking practical experience.**\n* **Anyone who wants to build their own interactive websites and applications.**\n\n**By the end of this course, you will be able to:**\n\n* **Develop a variety of interactive websites and web applications.**\n* **Apply your knowledge of HTML, CSS, and JavaScript to create functional projects.**\n* **Work with DOM manipulation, event handling, and data management in JavaScript.**\n* **Build responsive and user-friendly websites.**\n* **Gain confidence and practical experience in web development.**\n\n**Get ready to build exciting projects, expand your skills, and bring your web development ideas to life!**",
      "image": "https://p92.com/binaries/content/gallery/p92website/technologies/htmlcssjs-overview.png",
      "rating": 4.5,
      "available": true,
      "bestseller": true,
      "price": 410
    },
    {
      "id": 12,
      "title": "All About Bootstrap",
      "overview": "Master Bootstrap, a powerful and popular front-end framework that simplifies the process of building responsive and visually appealing websites. This comprehensive guide will take you from beginner to expert, equipping you with the knowledge and skills to create stunning web designs with ease.\n\n**Part 1: Bootstrap Fundamentals**\n\n* **Introduction to Bootstrap:** Explore the core concepts of Bootstrap, its design philosophy, and its advantages in web development.\n* **Setting up Bootstrap:** Learn how to integrate Bootstrap into your projects using CDN links or local installations, and understand the basic Bootstrap grid system.\n* **Essential Bootstrap Components:** Master the use of fundamental Bootstrap components like buttons, navigation bars, forms, and cards to build functional and stylish elements.\n* **Grid System and Layout:**  Dive deeper into Bootstrap's grid system, learning to create responsive layouts that adapt beautifully across different screen sizes.\n* **Styling with Bootstrap Classes:** Explore the vast library of Bootstrap utility classes for styling elements with ease, including classes for typography, spacing, colors, and more.\n\n**Part 2: Advanced Bootstrap Techniques**\n\n* **Responsive Design with Bootstrap:**  Master the art of creating responsive websites using Bootstrap's media queries and responsive utilities to ensure your designs adapt seamlessly to all devices.\n* **Customizing Bootstrap:**  Learn how to customize Bootstrap's default styles and components to align with your design preferences and branding, including creating custom themes.\n* **Bootstrap JavaScript Components:** Explore Bootstrap's JavaScript components, such as modals, carousels, and tooltips, to add dynamic and interactive elements to your website.\n* **Advanced Grid System Techniques:**  Explore advanced techniques for working with the Bootstrap grid, including nesting grids, creating complex layouts, and handling edge cases.\n* **Integrating Bootstrap with Other Frameworks:** Understand how to integrate Bootstrap with JavaScript frameworks like React, Vue.js, and Angular to create robust web applications.\n\n**Part 3: Bootstrap Best Practices and Optimization**\n\n* **Bootstrap Code Optimization:**  Learn techniques for writing clean, efficient, and maintainable Bootstrap code, minimizing redundancy and improving performance.\n* **Bootstrap Accessibility:**  Understand how to apply Bootstrap to ensure accessibility for all users, adhering to best practices for contrast, keyboard navigation, and other accessibility considerations.\n* **Bootstrap for Design Systems:**  Explore how Bootstrap can be used to create robust and scalable design systems, ensuring consistent branding and visual styles across your projects.\n* **Staying Up-to-Date with Bootstrap:**  Discover resources and strategies for staying informed about the latest versions, features, and best practices in the Bootstrap ecosystem.\n\n**This course is designed for:**\n\n* **Front-End Developers:** Anyone who wants to learn a powerful and efficient way to create beautiful and responsive websites.\n* **Designers:**  Individuals who want to translate their design ideas into production-ready code with ease and speed.\n* **Anyone interested in building visually appealing and user-friendly websites:** From aspiring developers to experienced web professionals, this guide provides a comprehensive understanding of Bootstrap.\n\n**By the end of this course, you will be able to:**\n\n* **Create stunning websites with a modern and responsive design using Bootstrap.**\n* **Master the core concepts and components of Bootstrap.**\n* **Build custom designs and layouts with Bootstrap's grid system.**\n* **Optimize your Bootstrap code for performance and accessibility.**\n* **Stay up-to-date with the latest advancements in the Bootstrap ecosystem.**\n\n**Get ready to unleash the power of Bootstrap and create websites that truly stand out!**",
      "image": "https://cdn.prod.website-files.com/6411daab15c8848a5e4e0153/659fce6c4c67870a474b854e_bootstrap-1.jpeg",
      "rating": 2.5,
      "available": true,
      "bestseller": false,
      "price": 280
    },
    {
      "id": 13,
      "title": "Learn PHP With Projects",
      "overview": "Dive into the world of PHP, a powerful server-side scripting language widely used for building dynamic websites and web applications. This practical course will guide you through a series of exciting projects, helping you solidify your understanding of PHP and gain valuable hands-on experience.\n\n**Part 1: PHP Fundamentals**\n\n* **Introduction to PHP:** Discover the purpose and capabilities of PHP, its role in web development, and how it interacts with HTML and databases.\n* **Setting Up PHP:** Learn how to install PHP on your system, configure a local development environment, and understand the basic structure of a PHP script.\n* **PHP Syntax and Variables:**  Master the fundamental syntax of PHP, including data types, variables, operators, and control flow statements.\n* **Working with Forms and User Input:**  Learn how to handle user input from forms, validate data, and process it using PHP.\n* **Basic PHP Functions:** Explore common PHP functions for manipulating strings, arrays, and dates, and understand how to create your own custom functions.\n\n**Part 2: Building Dynamic Web Pages**\n\n* **Dynamic Content with PHP:** Create dynamic web pages that display different content based on user input, database queries, or other factors.\n* **Working with Databases (MySQL):** Learn how to connect PHP to a MySQL database, perform queries, insert, update, and delete data, and manage database connections.\n* **Session Management:** Understand how to maintain user sessions, store user information, and manage login/logout functionality using PHP.\n* **Error Handling and Debugging:**  Master techniques for handling errors gracefully in PHP, implementing error logging and debugging strategies to resolve issues.\n\n**Part 3: Project-Based Learning**\n\n* **Simple Blog Application:** Build a basic blog application with features like creating posts, displaying articles, adding comments, and managing users.\n* **E-commerce Website (Basic):**  Develop a simple e-commerce website with product listings, a shopping cart, and a basic checkout process using PHP and a database.\n* **Contact Form with Email Validation:**  Create a contact form that allows users to submit messages and integrates with email services for sending notifications.\n* **User Authentication System:**  Build a user authentication system with login, registration, and password management, demonstrating secure user handling and data protection.\n\n**Part 4: Advanced PHP Techniques**\n\n* **Object-Oriented Programming (OOP) in PHP:**  Learn how to apply OOP principles to PHP to create modular, reusable, and maintainable code.\n* **Working with APIs:** Explore how to interact with external APIs using PHP, including making API requests and handling responses.\n* **Security Best Practices:**  Understand common security vulnerabilities in PHP applications and implement best practices to protect your applications from attacks.\n* **Advanced Database Techniques:**  Explore more advanced database techniques, such as database optimization, transactions, and data validation.\n* **Frameworks and Libraries:**  Get introduced to popular PHP frameworks like Laravel, Symfony, and CodeIgniter to streamline development and enhance application features.\n\n**This course is designed for:**\n\n* **Individuals who want to learn PHP to build dynamic websites and web applications.**\n* **Aspiring web developers seeking a strong foundation in server-side programming.**\n* **Anyone interested in creating interactive and data-driven web experiences.**\n\n**By the end of this course, you will be able to:**\n\n* **Develop dynamic web applications using PHP.**\n* **Master the core principles and syntax of PHP.**\n* **Work with databases (MySQL) and handle data effectively.**\n* **Build user authentication systems and secure your applications.**\n* **Apply best practices for building robust and scalable PHP applications.**\n\n**Get ready to unleash the power of PHP and build incredible web projects!**",
      "image": "https://www.devopsschool.com/blog/wp-content/uploads/2022/03/php-programming-language.jpg",
      "rating": 4,
      "available": false,
      "bestseller": false,
      "price": 288
    },
    {
      "id": 14,
      "title": "Advanced React.js With Projects",
      "overview": "Elevate your React.js skills to the next level and build complex, real-world applications with this comprehensive course. You'll master advanced concepts, design patterns, and best practices, while gaining practical experience through exciting project development.\n\n**Part 1: Deep Dive into React**\n\n* **Advanced Hooks:**  Explore the full power of React Hooks, including custom hooks, useMemo, useCallback, and more to optimize performance and manage complex state.\n* **Context API Mastery:**  Master the Context API to manage global state across your application efficiently, ensuring data consistency and easy access.\n* **React Router for Complex Navigation:**  Go beyond basic routing and build complex navigation systems with nested routes, dynamic routes, and custom route configurations.\n* **React Testing Library:** Learn to write comprehensive unit tests and integration tests for your React components using React Testing Library, ensuring code quality and stability.\n* **Performance Optimization:**  Dive into techniques for optimizing your React applications, including memoization, lazy loading, and data fetching strategies for a smooth user experience.\n\n**Part 2: Building Advanced Components and Features**\n\n* **Custom Hooks for Reusability:**  Create reusable custom hooks to encapsulate complex logic, improving code organization and maintainability.\n* **Building Forms with React Hook Form:**  Master efficient form handling with React Hook Form, simplifying form validation, submission, and error handling.\n* **Data Fetching with React Query:**  Simplify data fetching and caching with React Query, enhancing performance and managing data efficiently.\n* **Advanced Animations and Transitions:**  Go beyond basic transitions and create stunning animations with React Transition Group and custom animation libraries.\n* **Creating Accessible React Components:**  Develop accessible React components that are usable by everyone, incorporating best practices for ARIA attributes and keyboard navigation.\n\n**Part 3: Real-World Project Development**\n\n* **E-commerce Application:** Build a full-fledged e-commerce application with product listings, a shopping cart, checkout functionality, and user authentication. This project will involve integrating with external APIs, implementing state management, and utilizing advanced React concepts.\n* **Social Media Feed:**  Create a dynamic social media feed with features like user profiles, posting content, and real-time updates. This project will involve using a backend API for data, implementing user authentication, and potentially integrating with a real-time communication system.\n* **Interactive Dashboard:**  Build a data visualization dashboard with charts, graphs, and interactive elements. This project will involve working with data fetching, creating reusable chart components, and potentially integrating with data analysis libraries.\n\n**Part 4: Advanced React Architecture and Best Practices**\n\n* **Redux: State Management at Scale:** Explore Redux, a powerful state management library for managing complex application state in a centralized and predictable manner.\n* **React Query and GraphQL:**  Learn how to combine React Query with GraphQL to create a seamless and efficient data fetching and caching system for complex applications.\n* **Deploying React Applications:**  Master the process of deploying your React applications to different environments, including static hosting, serverless functions, and containerization.\n* **React Ecosystem:**  Explore the vast ecosystem of React libraries and tools, including libraries for animation, testing, data fetching, and more.",
      "image": "https://www.tertiarycourses.com.sg/media/catalog/product/cache/1/image/650x/040ec09b1e35df139433887a97daa66f/a/d/advanced-react-training.jpg",
      "rating": 4.5,
      "available": true,
      "bestseller": false,
      "price": 180
    },
    {
      "id": 15,
      "title": "SQL-MySQL With Projects",
      "overview": "Master the art of working with databases using SQL and MySQL. This comprehensive course will take you from beginner to expert, equipping you with the skills to manage data effectively, query databases efficiently, and build real-world applications.\n\n**Part 1: SQL Fundamentals**\n\n* **Introduction to SQL:** Discover the purpose and power of SQL, its role in database management, and its use in various applications.\n* **Understanding Relational Databases:**  Learn about the concept of relational databases, tables, columns, and rows, and how they are used to organize data.\n* **Basic SQL Syntax:** Master the fundamental SQL syntax, including keywords like SELECT, INSERT, UPDATE, DELETE, and WHERE to manipulate data within databases.\n* **Data Types and Constraints:**  Explore different data types in SQL, learn how to define constraints like primary keys and foreign keys, and understand data integrity.\n* **Queries and Filtering Data:** Learn how to write effective SQL queries to retrieve specific data, filter results, sort data, and aggregate results.\n\n**Part 2: MySQL Fundamentals**\n\n* **Introduction to MySQL:**  Explore the features and benefits of MySQL, a popular open-source relational database management system.\n* **Setting Up MySQL:** Learn how to install and configure MySQL on your system, connect to the database, and create databases and tables.\n* **Working with MySQL:** Master the use of MySQL commands and tools for managing databases, tables, and data.\n* **Data Manipulation with MySQL:**  Practice using SQL statements within MySQL to insert, update, delete, and retrieve data from your database.\n* **Database Optimization:** Understand techniques for optimizing database performance, including indexing, query optimization, and data normalization.\n\n**Part 3: Advanced SQL and MySQL Concepts**\n\n* **Joins and Subqueries:**  Explore powerful SQL techniques like joins (InnER JOIN, LEFT JOIN, RIGHT JOIN) and subqueries to retrieve complex data relationships.\n* **Stored Procedures and Functions:**  Learn how to create stored procedures and functions to encapsulate reusable logic and enhance database performance.\n* **Transactions and Concurrency:** Understand how transactions ensure data integrity during concurrent operations, and explore techniques for managing data consistency.\n* **Advanced Database Design:**  Explore database design principles, including normalization, denormalization, and data modeling to create efficient and maintainable databases.\n* **Database Security:**  Learn best practices for securing your MySQL databases, including user management, password protection, and data encryption.\n\n**Part 4: Project-Based Learning**\n\n* **Simple Database Application:**  Build a basic database-driven application using PHP or Node.js to demonstrate data retrieval, insertion, and manipulation with SQL and MySQL.\n* **Inventory Management System:**  Create a system to track inventory levels, manage orders, and update product information using a database to manage a business's inventory.\n* **Online Bookstore:**  Develop a simple online bookstore with features like browsing books, adding to a cart, and making purchases using a database to store book information and user orders.\n* **Social Media Platform (Basic):**  Build a simplified social media platform, including user accounts, profile information, and posting content, using a database to store user data and posts.",
      "image": "https://www.simplilearn.com/ice9/free_resources_article_thumb/difference_between_sql_and_mysql.jpg",
      "rating": 5,
      "available": true,
      "bestseller": true,
      "price": 292
    },
    {
      "id": 16,
      "title": "Basic to Advanced Of Python",
      "overview": "Embark on a comprehensive journey into the world of Python, a versatile and popular programming language renowned for its readability, simplicity, and vast applications. This course will guide you from novice to expert, equipping you with the skills to write efficient, elegant, and powerful Python code.\n\n**Part 1: Python Fundamentals**\n\n* **Introduction to Python:** Discover the core concepts of Python, its history, advantages, and applications across various fields.\n* **Setting up Python:** Learn how to install Python on your system, explore the Python interpreter, and understand basic program structure.\n* **Data Types and Variables:** Master the fundamental data types in Python, including numbers, strings, lists, tuples, dictionaries, and booleans, and learn how to work with variables.\n* **Operators and Expressions:** Explore Python's operators for arithmetic, comparison, logical operations, and more to build complex expressions.\n* **Control Flow and Loops:**  Master the use of conditional statements (if, elif, else) and looping constructs (for, while) to control the flow of your programs.\n\n**Part 2: Building Python Applications**\n\n* **Functions and Modules:** Learn how to define and use functions to create reusable code blocks and organize your programs. Explore Python's built-in modules and how to import custom modules.\n* **Working with Strings and Text:**  Master string manipulation techniques, including slicing, methods, formatting, and regular expressions to process text data effectively.\n* **Lists, Tuples, and Dictionaries:**  Explore advanced techniques for working with lists, tuples, and dictionaries, including nested data structures, list comprehensions, and dictionary operations.\n* **File Input and Output:** Learn how to read data from files, write data to files, and manipulate file contents using Python.\n* **Error Handling and Debugging:** Understand how to handle exceptions, debug code effectively, and write robust programs that gracefully handle errors.\n\n**Part 3: Advanced Python Concepts**\n\n* **Object-Oriented Programming (OOP) in Python:**  Apply OOP principles to Python, leveraging classes, inheritance, and polymorphism to design modular and reusable code.\n* **Data Structures and Algorithms:** Explore essential data structures like stacks, queues, trees, and graphs, and learn about algorithms for sorting, searching, and solving problems.\n* **Working with Databases:**  Learn how to interact with databases using Python, including connecting to databases like SQLite and MySQL, performing queries, and manipulating data.\n* **Web Development with Python:**  Discover how to use Python frameworks like Flask or Django to build web applications, handle web requests, and create dynamic websites.\n* **Data Science and Machine Learning:** Explore Python libraries like NumPy, Pandas, Scikit-learn, and TensorFlow to apply Python to data analysis, machine learning, and artificial intelligence.\n\n**Part 4: Advanced Python Techniques**\n\n* **Functional Programming in Python:**  Explore the concepts of functional programming and how they can be applied to Python for clean and efficient code.\n* **Decorators and Generators:**  Learn how to use decorators to modify functions dynamically and explore the power of generators for creating efficient iterators.\n* **Concurrency and Multithreading:**  Understand how to write concurrent programs in Python using multithreading and multiprocessing to improve performance.\n* **Advanced Modules and Packages:**  Explore more advanced Python modules and packages, including libraries for networking, image processing, and data visualization.",
      "image": "https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/06/Python-Programming-Edureka.png",
      "rating": 4.5,
      "available": false,
      "bestseller": false,
      "price": 321
    },
    {
      "id": 17,
      "title": "Full Course Of Ruby",
      "overview": "Embark on a captivating journey into the world of Ruby, a dynamic and elegant programming language known for its simplicity, readability, and focus on developer happiness. This comprehensive course will guide you from begi\n\ner to expert, equipping you with the skills to create powerful, expressive, and maintainable Ruby applications.\n\n**Part 1: Ruby Fundamentals**\n\n* **Introduction to Ruby:** Discover the essence of Ruby, its history, philosophy, and its place in the world of programming languages.\n* **Setting Up Ruby:** Learn how to install Ruby on your system, explore the Ruby interpreter, and understand basic program structure.\n* **Ruby Syntax and Variables:** Master the fundamental syntax of Ruby, including data types, variables, operators, and control flow statements.\n* **Methods and Blocks:** Explore the concept of methods, Ruby's building blocks for reusable code, and learn how to use blocks to create concise and flexible code.\n* **Working with Strings, Arrays, and Hashes:**  Master the manipulation of strings, arrays, and hashes, including methods for searching, sorting, and transforming data.\n\n**Part 2: Ruby Programming Techniques**\n\n* **Object-Oriented Programming (OOP) in Ruby:**  Dive deep into Ruby's object-oriented nature, understanding classes, objects, inheritance, and polymorphism.\n* **Working with Files and Directories:** Learn how to read and write data to files, manipulate file contents, and navigate directory structures using Ruby.\n* **Error Handling and Exception Handling:**  Master techniques for handling errors and exceptions gracefully in your Ruby programs, ensuring robust and resilient code.\n* **Modules and Mixins:** Explore the use of modules to organize code and create reusable functionalities, and learn how to leverage mixins for extending classes without inheritance.\n* **RubyGems and Package Management:**  Discover the world of RubyGems, a package manager for Ruby, and learn how to install, manage, and use external libraries to enhance your projects.\n\n**Part 3: Building Ruby Applications**\n\n* **Building Console Applications:**  Create interactive command-line applications using Ruby's standard input/output and argument parsing capabilities.\n* **Web Development with Ruby on Rails:**  Explore the power of Ruby on Rails, a popular web framework built on Ruby, to develop full-featured web applications with ease.\n* **Database Integration with ActiveRecord:**  Learn how to connect Ruby applications to databases using ActiveRecord, an ORM (Object-Relational Mapper) that simplifies database interactions.\n* **Testing with RSpec:**  Discover RSpec, a popular testing framework for Ruby, and learn how to write effective unit tests to ensure code quality and maintainability.\n* **Ruby Best Practices and Code Optimization:**  Explore best practices for writing clean, readable, and efficient Ruby code, including code organization, naming conventions, and performance optimization techniques.\n\n**Part 4: Advanced Ruby Concepts and Frameworks**\n\n* **Metaprogramming and Dynamic Programming:**  Delve into the world of metaprogramming, enabling you to manipulate code at runtime and customize Ruby's behavior.\n* **Advanced Object-Oriented Design Patterns:**  Explore common design patterns like Singleton, Observer, and Strategy to enhance code structure and maintainability.\n* **Working with Threads and Concurrency:**  Learn how to use threads to improve performance in your Ruby applications and manage concurrent operations.\n* **Building REST APIs with Ruby:**  Discover how to create RESTful APIs with Ruby, enabling communication between your application and other services.\n* **Beyond Ruby on Rails:**  Explore other popular Ruby frameworks like Sinatra and Grape to create lightweight and flexible web applications.",
      "image": "https://files.codingninjas.in/article_images/point-equality-in-ruby-0-1656849011.webp",
      "rating": 4,
      "available": true,
      "bestseller": false,
      "price": 264
    },
    {
      "id": 18,
      "title": "PHP For Beginners",
      "overview": "Welcome to the world of server-side programming! This beginner-friendly guide will introduce you to PHP, a powerful scripting language widely used for building dynamic websites and web applications. You'll learn the fundamentals of PHP and gain the skills to create interactive web pages.\n\n**Part 1: PHP Basics**\n\n* **Introduction to PHP:**  Discover what PHP is, its purpose, and its role in web development. Understand how PHP interacts with HTML to create dynamic content.\n* **Setting Up PHP:** Learn how to install PHP on your system, configure a local development environment, and create your first PHP script.\n* **PHP Syntax and Variables:** Master the fundamental syntax of PHP, including data types, variables, operators, and control flow statements.\n* **Working with Forms and User Input:**  Learn how to create HTML forms and use PHP to handle user input, process data, and perform simple validation.\n* **Basic PHP Functions:** Explore common PHP functions for manipulating strings, arrays, and dates, and understand how to create your own custom functions to reuse code.\n\n**Part 2: Building Dynamic Web Pages**\n\n* **Dynamic Content with PHP:**  Learn how to generate dynamic content on your web pages, displaying different information based on user input, database queries, or other conditions.\n* **Including Files and Code Organization:**  Understand how to include external PHP files to organize your code and create reusable components.\n* **Session Management:**  Explore how to manage user sessions, store user information, and handle login/logout functionality using PHP.\n* **Working with Cookies:**  Learn how to use cookies to store user preferences and track user activity on your website.\n\n**Part 3: Project-Based Learning**\n\n* **Simple Guestbook:** Build a basic guestbook application that allows users to leave messages, demonstrating how to store data in a text file and display it dynamically.\n* **Contact Form with Email:**  Create a contact form that allows users to submit messages and integrates with email services to send notifications.\n* **Basic Blog Application:**  Develop a simple blog application with features like creating posts, displaying articles, and adding comments. This project introduces basic database interactions (using a text file) and content management.\n\n**Part 4: PHP Best Practices**\n\n* **Code Organization and Structure:**  Learn best practices for structuring your PHP code, creating reusable functions, and using comments to enhance readability.\n* **Error Handling:**  Understand how to handle errors gracefully in PHP, using error reporting and debugging techniques to identify and resolve issues.\n* **Security Considerations:**  Learn about common security vulnerabilities in PHP applications and implement basic security measures to protect your websites.\n* **PHP Resources and Community:**  Explore resources and communities for learning more about PHP, finding answers to questions, and staying up-to-date with the latest developments.\n\n**This course is designed for:**\n\n* **Absolute Beginners:** Individuals with no prior knowledge of programming or web development.\n* **Anyone interested in learning how to create dynamic websites.**\n* **Aspiring web developers seeking a foundation in server-side programming.**\n\n**By the end of this course, you will be able to:**\n\n* **Understand the fundamental concepts of PHP and its syntax.**\n* **Create dynamic web pages with PHP and interact with user input.**\n* **Build basic web applications with PHP, including forms, session management, and data storage.**\n* **Apply best practices for writing clean and secure PHP code.**\n\n**Get ready to embark on your journey into the world of PHP and build dynamic, interactive websites!**",
      "image": "https://cdn-images-1.medium.com/v2/resize:fit:900/0*YbKH9QBFFrtVVsae",
      "rating": 3.5,
      "available": false,
      "bestseller": false,
      "price": 90
    },
    {
      "id": 19,
      "title": "All About JSON-XML",
      "overview": "Master the art of exchanging data on the web with JSON and XML, two widely used data formats that power communication between web applications and services. This comprehensive guide will equip you with the knowledge and skills to work confidently with both formats.\n\n**Part 1: Understanding Data Formats**\n\n* **Introduction to Data Formats:** Explore the purpose of data formats in web development, their role in communication between applications, and their advantages over plain text.\n* **What is JSON?** Discover the structure and syntax of JSON (JavaScript Object Notation), a lightweight and human-readable data format based on JavaScript objects.\n* **What is XML?** Learn about XML (Extensible Markup Language), a more structured and hierarchical data format that uses tags to define data elements.\n* **Comparing JSON and XML:** Understand the key differences between JSON and XML, including their structure, readability, and use cases.\n* **Data Types and Structures:** Explore common data types used in both formats, including strings, numbers, booleans, arrays, and objects.\n\n**Part 2: Working with JSON**\n\n* **Parsing JSON Data:** Learn how to parse JSON data using programming languages like JavaScript, Python, and PHP, converting JSON strings into structured data objects.\n* **Creating JSON Data:**  Understand how to create valid JSON data structures using programming languages and libraries, representing data in a JSON format.\n* **JSON in Web APIs:** Explore the use of JSON as a standard format for data exchange in web APIs, facilitating communication between web applications and services.\n* **JSON Schema Validation:** Learn how to use JSON Schema to define the structure and validation rules for your JSON data, ensuring data integrity and consistency.\n\n**Part 3: Working with XML**\n\n* **Parsing XML Data:**  Discover how to parse XML data using programming languages and libraries, converting XML documents into structured data objects.\n* **Creating XML Data:**  Understand how to create valid XML documents using programming languages and libraries, defining data elements with tags and attributes.\n* **XML in Web Services:**  Explore the use of XML in web services, including SOAP and REST, for exchanging data between applications.\n* **XML Schema Validation:**  Learn how to use XML Schema to define the structure and validation rules for your XML data, ensuring consistency and data integrity.\n\n**Part 4: Real-World Applications**\n\n* **Web API Integration:**  Practice integrating with web APIs that use JSON or XML to retrieve and manipulate data from external services.\n* **Data Serialization and Deserialization:** Learn how to serialize data into JSON or XML format for storage or transmission and deserialize data back into structured objects for processing.\n* **Developing Web Services:**  Create simple web services using PHP or Node.js that utilize JSON or XML for data exchange, demonstrating communication between applications.\n* **Working with Databases:**  Understand how to use JSON and XML to interact with databases, storing data in these formats and retrieving it for processing.\n\n**This guide is designed for:**\n\n* **Web Developers:** Anyone involved in building web applications or services that exchange data.\n* **Data Analysts:**  Individuals who work with data from various sources and need to understand how data is represented in JSON and XML.\n* **Anyone who wants to understand how data is communicated on the web:**  From aspiring developers to experienced professionals, this guide provides a comprehensive understanding of JSON and XML.\n\n**By the end of this guide, you will be able to:**\n\n* **Understand the core concepts and syntax of both JSON and XML.**\n* **Parse and create JSON and XML data using programming languages.",
      "image": "https://lh4.googleusercontent.com/PiKaxkILS2lp48u_mUG08hNv5vV58kOc2pOAtk5ln3A8uP5yUUjrQOAvnvZ3QVxUVa4mU_4si8vomNrHFTH7leNCWLUrQQRHr-2DAVIdFTz-7y7ptWe00XeBBIIa54X_pQ5WZhs",
      "rating": 4,
      "available": true,
      "bestseller": false,
      "price": 200
    },
    {
      "id": 20,
      "title": "Coding With AI",
      "overview": "Embark on an exciting journey into the world of Artificial Intelligence (AI) and learn how to code intelligent applications. This comprehensive course will guide you through the fundamental concepts, tools, and techniques used in AI programming, equipping you to build innovative solutions.\n\n**Part 1: Introduction to AI and Programming**\n\n* **What is Artificial Intelligence?** Explore the history, concepts, and applications of AI, understanding its impact on various industries.\n* **Python for AI:** Discover Python, a powerful and versatile language widely used in AI development, and learn its basic syntax and features.\n* **Data Structures and Algorithms:** Master fundamental data structures like lists, dictionaries, and sets, and learn about essential algorithms for data manipulation and problem-solving.\n* **Machine Learning Basics:**  Understand the core principles of machine learning, exploring supervised, unsupervised, and reinforcement learning approaches.\n* **Setting Up Your AI Environment:**  Learn how to set up your development environment, install Python libraries, and configure necessary tools for AI programming.\n\n**Part 2: Machine Learning with Python**\n\n* **NumPy and Pandas:** Master NumPy for numerical computations and Pandas for data manipulation and analysis, essential tools for machine learning.\n* **Supervised Learning:**  Explore supervised learning algorithms like Linear Regression, Logistic Regression, Decision Trees, and Support Vector Machines (SVMs) to build predictive models.\n* **Unsupervised Learning:**  Discover unsupervised learning algorithms like K-Means Clustering, Principal Component Analysis (PCA), and Hierarchical Clustering for uncovering patterns and insights in data.\n* **Model Evaluation and Selection:**  Learn how to evaluate the performance of machine learning models using metrics like accuracy, precision, recall, and F1-score. Understand techniques for selecting the best model for your application.\n\n**Part 3: Deep Learning with Python**\n\n* **Introduction to Deep Learning:** Explore the concepts and benefits of deep learning, its relation to machine learning, and its applications in areas like image recognition and natural language processing.\n* **Neural Networks:**  Understand the fundamentals of neural networks, including layers, neurons, activation functions, and backpropagation.\n* **TensorFlow and Keras:**  Master TensorFlow and Keras, popular libraries for building and training deep learning models, including Convolutional Neural Networks (CNNs) and Recurrent Neural Networks (RNNs).\n* **Deep Learning for Image Recognition:**  Learn how to build and train deep learning models for image classification, object detection, and image segmentation.\n* **Deep Learning for Natural Language Processing (NLP):**  Explore deep learning techniques for NLP tasks like sentiment analysis, text classification, and language translation.\n\n**Part 4: AI Applications and Deployment**\n\n* **Building AI-Powered Projects:**  Put your knowledge into practice by building real-world projects using AI, such as image recognition systems, chatbot applications, or predictive models.\n* **AI Ethics and Bias:**  Understand the ethical considerations and potential biases in AI systems, exploring techniques for mitigating bias and promoting responsible AI development.\n* **AI Deployment and Integration:** Learn how to deploy your AI models and integrate them into web applications or other software systems for real-world use.\n\n**This course is designed for:**\n\n* **Aspiring AI Developers:**  Individuals with an interest in AI who want to learn the fundamentals of AI programming.\n* **Software Developers:**  Those who want to add AI capabilities to their projects and build intelligent applications.",
      "image": "https://lvivity.com/wp-content/uploads/2018/07/ai-product.jpg",
      "rating": 5,
      "available": true,
      "bestseller": true,
      "price": 320
    }
  ],
  "testimonials": [
    {
      "id": "t1",
      "name": "Ryan Styles",
      "image": "https://xsgames.co/randomusers/assets/avatars/male/58.jpg",
      "text": "I was terrified to start learning to code, but CodeNerd made it so easy! Their courses are clear, engaging, and the instructors are incredibly patient and helpful. I finally built my first website, and I feel so proud of myself. Thank you, CodeNerd!",
      "color": "#e1f5fe"
    },
    {
      "id": "t2",
      "name": "Sarah Wright",
      "image": "https://xsgames.co/randomusers/assets/avatars/female/69.jpg",
      "text": "I've been a software developer for years, but I wanted to learn React.js. CodeNerd's course was exactly what I needed. It covered everything in a way that was both thorough and easy to understand. I highly recommend it to anyone looking to level up their React skills.",
      "color": "#b3e5fc"
    },
    {
      "id": "t3",
      "name": "Francis Oliver",
      "image": "https://xsgames.co/randomusers/assets/avatars/male/42.jpg",
      "text": "I was looking for a fun and engaging way to learn Python, and CodeNerd delivered! Their project-based approach kept me motivated and helped me understand the concepts in a practical way. Now I'm excited to explore data science and machine learning.",
      "color": "#e0f7fa"
    },
    {
      "id": "t4",
      "name": "Alice Richardson",
      "image": "https://xsgames.co/randomusers/assets/avatars/female/5.jpg",
      "text": "CodeNerd's courses are incredibly affordable, and the quality is amazing. I've taken several of their courses, and I've learned so much. I highly recommend them to anyone who wants to learn coding in a flexible and affordable way.",
      "color": "#b2ebf2"
    },
    {
      "id": "t5",
      "name": "Sam Watts",
      "image": "https://xsgames.co/randomusers/assets/avatars/male/48.jpg",
      "text": "I was skeptical about learning coding online, but CodeNerd changed my mind. Their platform is user-friendly, and the community support is incredible. I've connected with other learners and instructors, and it's been a truly enriching experience.",
      "color": "#e0f2f1"
    }
  ],
  "orders": [
    {
      "cartList": [
        {
          "id": 2,
          "title": "All You Need To Know About CSS",
          "overview": "This comprehensive guide will equip you with a solid understanding of Cascading Style Sheets (CSS), empowering you to create visually stu\n\ning and responsive websites.\n\n**Part 1: CSS Fundamentals**\n\n* **Introduction to CSS:** Explore the basics of CSS, its purpose, and how it works in conjunction with HTML.\n* **Selectors and Properties:** Learn how to target specific HTML elements and apply styles using selectors and properties.\n* **Basic Styling:** Master fundamental CSS properties like color, font, size, spacing, and positioning.\n* **Layout and Positioning:** Discover different techniques for arranging elements on the page using flexbox, grid, and traditional positioning methods.\n* **Typography:** Enhance the readability and visual appeal of your website with advanced typography techniques.\n\n**Part 2: Advanced CSS Techniques**\n\n* **Responsive Web Design:** Learn to create websites that adapt seamlessly to different screen sizes and devices.\n* **Animations and Transitions:** Add dynamic effects and user interactions to your websites using CSS animations and transitions.\n* **Preprocessors:** Explore popular CSS preprocessors like Sass and Less to streamline your workflow and enhance your CSS code.\n* **CSS Frameworks:** Understand the benefits of using CSS frameworks like Bootstrap and Tailwind CSS for rapid web development.\n* **Modern CSS Features:** Dive into new and exciting CSS features like CSS Grid, Flexbox, and CSS Variables to create innovative designs.\n\n**This guide is designed for:**\n\n* **Beginners:** Individuals new to web development and CSS.\n* **Front-End Developers:** Those who want to expand their CSS knowledge and master advanced techniques.\n* **Anyone interested in creating visually appealing websites:** From designers to hobbyists, this guide provides the essential CSS foundation.\n\n**By the end of this guide, you will be able to:**\n\n* **Create visually appealing and responsive websites.**\n* **Understand and apply advanced CSS techniques.**\n* **Optimize your CSS code for efficiency and maintainability.**\n* **Leverage popular CSS frameworks and preprocessors.**\n* **Stay up-to-date with the latest CSS trends and best practices.**\n\n**Get ready to unleash the power of CSS and bring your web design visions to life!**",
          "image": "https://x-team.com/hs-fs/hubfs/Imported_Blog_Media/CSS-Code-2.jpg?width=2180&height=980&name=CSS-Code-2.jpg",
          "rating": 4,
          "available": true,
          "bestseller": false,
          "price": 345
        }
      ],
      "cartTotal": 345,
      "paymentID": "codenerd1726044665839",
      "quantity": 1,
      "userInfo": {
        "name": "shaun",
        "email": "shaun@gmail.com",
        "id": 1
      },
      "id": 1
    }
  ],
  "users": [
    {
      "email": "shaun@gmail.com",
      "password": "$2a$10$VTiQGSJJWSzi/s4kX35f8.W2mLibwsGjhDQ21lGnPf7Y21Zw0105m",
      "name": "shaun",
      "id": 1
    }
  ]
}